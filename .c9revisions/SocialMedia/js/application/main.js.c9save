{"ts":1357932621233,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"// Get results from locator\r\nfunction locateQuery(text, wkid, maxLocations, callback) {\r\n    // Max results\r\n    if (!maxLocations) {\r\n        maxLocations = 1;\r\n    }\r\n    if (!wkid) {\r\n        wkid = 102100;\r\n    }\r\n    // Query object\r\n    var queryContent = {\r\n        \"text\": text,\r\n        \"outSR\": wkid,\r\n        \"outFields\": \"*\",\r\n        \"sourceCountry\": configOptions.sourceCountry,\r\n        \"maxLocations\": maxLocations,\r\n        \"f\": \"json\"\r\n    };\r\n    // send request\r\n    var requestHandle = esri.request({\r\n        url: configOptions.locatorserviceurl + '/find',\r\n        content: queryContent,\r\n        callbackParamName: \"callback\",\r\n        // on load\r\n        load: function (response) {\r\n            if (typeof callback === 'function') {\r\n                // call callback function\r\n                callback.call(this, response);\r\n            }\r\n        }\r\n    });\r\n}\r\n\r\n// clear the locate graphic\r\nfunction resetLocateLayer() {\r\n    if (configOptions.locateLayer) {\r\n        configOptions.locateLayer.clear();\r\n    }\r\n    configOptions.locateName = \"\";\r\n    setSharing();\r\n}\r\n\r\n// hide auto complete results timeout\r\nfunction resetHideACTimeout() {\r\n    clearTimeout(configOptions.autocompleteTimer);\r\n    configOptions.autocompleteTimer = setTimeout(hideAC, 6000);\r\n}\r\n\r\n// Locate address\r\nfunction locate() {\r\n    var query = dojo.query('#address').attr('value')[0];\r\n    if (query) {\r\n        locateQuery(query, map.extent.spatialReference.wkid, 1, showResults);\r\n        setSharing();\r\n    } else {\r\n        alertDialog(i18n.viewer.errors.noText);\r\n    }\r\n}\r\n\r\n// Show autocomplete\r\nfunction showAutoComplete(results) {\r\n    configOptions.autocompleteResults = results;\r\n    resetHideACTimeout();\r\n    var aResults = '';\r\n    var addressPosition = dojo.query('#locateBox')[0];\r\n    var offset = dojo.position(addressPosition);\r\n    var partialMatch = dojo.query('#address').attr('value');\r\n    var regex = new RegExp('(' + partialMatch + ')', 'gi');\r\n    var autoCompleteObj = dojo.query('#autoComplete');\r\n    var box = dojo.marginBox(addressPosition);\r\n    autoCompleteObj.style({\r\n        'left': offset.x + 'px',\r\n        'top': box.h + 'px'\r\n    });\r\n    aResults += '<div class=\"menuClose\"><div class=\"closeButton closeAC\"></div>' + i18n.viewer.autoComplete.menuTitle + '<div class=\"clear\"></div></div>';\r\n    aResults += '<ul class=\"zebraStripes\">';\r\n    var i;\r\n    for (i = 0; i < results.locations.length; ++i) {\r\n        var layerClass = '';\r\n        if (i % 2 === 0) {\r\n            layerClass = '';\r\n        } else {\r\n            layerClass = 'stripe';\r\n        }\r\n        aResults += '<li data-index=\"' + i + '\" tabindex=\"0\" class=\"' + layerClass + '\">' + results.locations[i].name.replace(regex, '<span>' + partialMatch + '</span>') + '</li>';\r\n    }\r\n    aResults += '</ul>';\r\n    if (results.locations.length > 0) {\r\n        if (autoCompleteObj[0]) {\r\n            autoCompleteObj[0].innerHTML = aResults;\r\n        }\r\n        autoCompleteObj.style('display', 'block');\r\n    } else {\r\n        hideAC();\r\n    }\r\n\r\n}\r\n\r\nfunction setMarker(point, address) {\r\n    if (configOptions.pointGraphic) {\r\n        // Create point marker\r\n        var pointGraphic = new esri.symbol.PictureMarkerSymbol(configOptions.pointGraphic, 21, 29).setOffset(0, 12);\r\n        var locationGraphic = new esri.Graphic(point, pointGraphic);\r\n        // if locate point layer\r\n        if (configOptions.locateLayer) {\r\n            configOptions.locateLayer.clear();\r\n            clearPopupValues();\r\n            configOptions.customPopup.hide();\r\n        } else {\r\n            configOptions.locateLayer = new esri.layers.GraphicsLayer();\r\n            dojo.connect(configOptions.locateLayer, \"onClick\",\r\n\r\n            function (evt) {\r\n                clearPopupValues();\r\n                dojo.stopEvent(evt);\r\n                var content = \"<strong>\" + evt.graphic.attributes.address + \"</strong>\";\r\n                configOptions.customPopup.setContent(content);\r\n                configOptions.customPopup.setTitle(i18n.viewer.search.location);\r\n                configOptions.customPopup.show(evt.graphic.geometry);\r\n            });\r\n            map.addLayer(configOptions.locateLayer);\r\n        }\r\n        // graphic\r\n        locationGraphic.setAttributes({\r\n            \"address\": address\r\n        });\r\n        configOptions.locateLayer.add(locationGraphic);\r\n    }\r\n}\r\n\r\n// Show locate results\r\nfunction showResults(results, resultNumber) {\r\n    // if results\r\n    if (results.locations.length > 0) {\r\n        // result number\r\n        var numResult = 0;\r\n        if (resultNumber) {\r\n            numResult = resultNumber;\r\n        }\r\n\t\tvar sr = new esri.SpatialReference(results.spatialReference);\r\n        // new extent\r\n        var extent = new esri.geometry.Extent(results.locations[numResult].extent);\r\n\t\textent.setSpatialReference(sr);\r\n        // center of extent\r\n        var point = new esri.geometry.Point(results.locations[numResult].feature.geometry);\r\n\t\tpoint.setSpatialReference(sr);\r\n        // set marker\r\n        configOptions.locatePoint[0] = point.x;\r\n        configOptions.locatePoint[1] = point.y;\r\n        dojo.query('#address').attr('value', results.locations[numResult].name);\r\n        configOptions.locateName = results.locations[numResult].name;\r\n        // Set extent\r\n        map.setExtent(extent);\r\n\t\t// set point marker\r\n        setMarker(point, results.locations[numResult].name);\r\n    } else {\r\n        alertDialog(i18n.viewer.errors.noLocation);\r\n        resetLocateLayer();\r\n        clearAddress(dojo.query('#address'));\r\n    }\r\n    hideAC();\r\n}\r\n\r\n// hide autocopmlete\r\nfunction hideAC() {\r\n    dojo.query('#autoComplete').style('display', 'none');\r\n}\r\n\r\n// clear locate box\r\nfunction clearAddress(obj) {\r\n    dojo.query(obj).attr('value', '');\r\n    var iconReset = dojo.query(obj).prev('.iconClear');\r\n    iconReset.removeClass('iconReset').attr('title', '');\r\n}\r\n\r\n// see if locate box is populated\r\nfunction checkAddressStatus(obj) {\r\n    var cAVal = dojo.query(obj).attr('value')[0];\r\n    var iconReset = dojo.query(obj).prev('.iconClear');\r\n    if (cAVal !== '') {\r\n        iconReset.addClass('iconReset').attr(\"title\", i18n.viewer.search.clearLocation);\r\n    } else {\r\n        clearAddress(obj);\r\n    }\r\n}\r\n\r\n// resize map\r\nfunction resizeMap() {\r\n    //clear any existing resize timer\r\n    clearTimeout(configOptions.mapTimer);\r\n    //create new resize timer with delay of 500 milliseconds\r\n    configOptions.mapTimer = setTimeout(function () {\r\n        if (map) {\r\n            var barHeight = 0,\r\n                chartHeight = 0;\r\n            // menu bar height\r\n            var menuBar = dojo.byId('topMenuBar');\r\n            if (menuBar) {\r\n                var menuPos = dojo.position(menuBar);\r\n                barHeight = menuPos.h;\r\n            }\r\n            // chart height\r\n            var chartNode = dojo.byId('graphBar');\r\n            if (chartNode) {\r\n                var chartPos = dojo.position(chartNode);\r\n                chartHeight = chartPos.h;\r\n            }\r\n            // window height\r\n            var vs = dojo.window.getBox();\r\n            var windowHeight = vs.h;\r\n            var node = dojo.byId('map');\r\n            if (node) {\r\n                dojo.style(node, {\r\n                    \"height\": windowHeight - barHeight - chartHeight + 'px'\r\n                });\r\n            }\r\n            // resize\r\n            map.resize();\r\n            map.reposition();\r\n            // update location of menus\r\n            updateLeftMenuOffset('#shareMap', '#shareControls');\r\n            updateLeftMenuOffset('#placesButton', '#placesMenu');\r\n            updateRightMenuOffset('#layersButton', '#layersMenu');\r\n            updateRightMenuOffset('#basemapButton', '#basemapMenu');\r\n            updateRightMenuOffset('#legendButton', '#legendMenu');\r\n            updateRightMenuOffset('socialButton', '#socialMenu');\r\n        }\r\n    }, 500);\r\n}\r\n\r\nfunction hideAboutMap(){\r\n    if (configOptions.aboutDialog) {\r\n        configOptions.aboutDialog.hide();\r\n        dojo.query('#aboutMap').removeClass('barSelected');\r\n    }\r\n}\r\n\r\n// Toggle show/hide about map info\r\nfunction toggleAboutMap(obj) {\r\n    if (configOptions.aboutDialog) {\r\n        if (!configOptions.aboutDialog.get('open')) {\r\n            configOptions.aboutDialog.show();\r\n            dojo.query(obj).addClass('barSelected');\r\n        } else {\r\n            configOptions.aboutDialog.hide();\r\n            dojo.query(obj).removeClass('barSelected');\r\n        }\r\n    }\r\n}\r\n\r\n// twitter link\r\nfunction setTWLink(shLink) {\r\n    if (shLink) {\r\n        var fullLink;\r\n        var w = 650;\r\n        var h = 400;\r\n        var left = (screen.width / 2) - (w / 2);\r\n        var top = (screen.height / 2) - (h / 2);\r\n        fullLink = 'https://twitter.com/intent/tweet?' + 'url=' + encodeURIComponent(shLink) + '&text=' + encodeURIComponent(configOptions.itemInfo.item.snippet) + '&hashtags=' + 'EsriSMT';\r\n        window.open(fullLink, 'share', 'width=' + w + ',height=' + h + ',top=' + top + ',left=' + left, true);\r\n    }\r\n}\r\n\r\n// facebook link\r\nfunction setFBLink(fbLink) {\r\n    if (fbLink) {\r\n        var fullLink;\r\n        var w = 650;\r\n        var h = 360;\r\n        var left = (screen.width / 2) - (w / 2);\r\n        var top = (screen.height / 2) - (h / 2);\r\n        fullLink = 'http://www.facebook.com/sharer.php?u=' + encodeURIComponent(fbLink) + '&t=' + encodeURIComponent(configOptions.itemInfo.item.snippet);\r\n        window.open(fullLink, 'share', 'width=' + w + ',height=' + h + ',top=' + top + ',left=' + left, true);\r\n    }\r\n}\r\n\r\n// right side menu buttons\r\nfunction rightSideMenuButtons() {\r\n    var html = '';\r\n    var node;\r\n    if (configOptions.showLegendMenu && configOptions.layerInfos && configOptions.layerInfos.length > 0) {\r\n        html += '<span tabindex=\"0\" id=\"legendButton\" data-menu=\"legend\" class=\"barButton\" title=\"' + i18n.viewer.buttons.legendTitle + '\"><span class=\"barIcon legendIcon\"></span>' + i18n.viewer.buttons.legend + '</span>';\r\n        // Social MENU TOGGLE\r\n        dojo.query(document).delegate(\"#legendButton\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                toggleMenus('legend');\r\n            }\r\n        });\r\n    }\r\n    if (configOptions.showBasemapMenu) {\r\n        html += '<span tabindex=\"0\" id=\"basemapButton\" data-menu=\"basemap\" class=\"barButton\" title=\"' + i18n.viewer.buttons.basemapTitle + '\"><span class=\"barIcon basemapIcon\"></span>' + i18n.viewer.buttons.basemap + '</span>';\r\n        // Basemap MENU TOGGLE\r\n        dojo.query(document).delegate(\"#basemapButton\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                toggleMenus('basemap');\r\n            }\r\n        });\r\n        node = dojo.byId('basemapMenu');\r\n        if (node) {\r\n            node.innerHTML = '<div class=\"menuClose\"><div class=\"closeButton closeMenu\"></div>' + i18n.viewer.basemap.menuTitle + '<div class=\"clear\"></div></div><div class=\"bmMenuCon\"><div class=\"slideScroll\"><div id=\"baseContainer\"></div></div></div>';\r\n        }\r\n        // basemap gallery prepend to node\r\n        if (configOptions.bmDijit) {\r\n            dojo.place(configOptions.bmDijit.domNode, dojo.byId(\"baseContainer\"), \"first\");\r\n        }\r\n    }\r\n    if (configOptions.showLayersMenu) {\r\n        html += '<span tabindex=\"0\" id=\"layersButton\" data-menu=\"layers\" class=\"barButton\" title=\"' + i18n.viewer.buttons.layersTitle + '\"><span class=\"barIcon layersIcon\"></span>' + i18n.viewer.buttons.layers + '</span>';\r\n        // Layers MENU TOGGLE\r\n        dojo.query(document).delegate(\"#layersButton\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                toggleMenus('layers');\r\n            }\r\n        });\r\n    }\r\n    if (configOptions.showSocialMenu) {\r\n        html += '<span tabindex=\"0\" id=\"socialButton\" data-menu=\"social\" class=\"barButton\" title=\"' + i18n.viewer.buttons.socialTitle + '\"><span class=\"barIcon socialIcon\"></span>' + i18n.viewer.buttons.social + '</span>';\r\n        // Social MENU TOGGLE\r\n        dojo.query(document).delegate(\"#socialButton\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                toggleMenus('social');\r\n            }\r\n        });\r\n    }\r\n    node = dojo.byId('menuList');\r\n    if (node) {\r\n        node.innerHTML = html;\r\n    }\r\n    // Show Default Menu\r\n    if (configOptions.defaultMenu) {\r\n        switch (configOptions.defaultMenu) {\r\n        case 'places':\r\n            if (configOptions.showPlaces) {\r\n                toggleMenus(configOptions.defaultMenu);\r\n            }\r\n            break;\r\n        case 'basemap':\r\n            if (configOptions.showBasemapMenu) {\r\n                toggleMenus(configOptions.defaultMenu);\r\n            }\r\n            break;\r\n        case 'layers':\r\n            if (configOptions.showLayersMenu) {\r\n                toggleMenus(configOptions.defaultMenu);\r\n            }\r\n            break;\r\n        case 'social':\r\n            if (configOptions.showSocialMenu) {\r\n                toggleMenus(configOptions.defaultMenu);\r\n            }\r\n            break;\r\n        case 'legend':\r\n            if (configOptions.showLegendMenu) {\r\n                toggleMenus(configOptions.defaultMenu);\r\n            }\r\n            break;\r\n        }\r\n    }\r\n    // Show Menu Bar\r\n    dojo.query('#topMenuBar').style('display', 'block');\r\n}\r\n\r\n// set up share menu\r\nfunction configureShareMenu() {\r\n    if (configOptions.showShareMenu) {\r\n        var node = dojo.query('#shareMap')[0];\r\n        if (node) {\r\n            node.innerHTML = '<span tabindex=\"0\" id=\"shareIcon\" data-menu=\"share\" class=\"barButton\" title=\"' + i18n.viewer.buttons.linkTitle + '\"><span class=\"barIcon iconBlock\"></span>' + i18n.viewer.buttons.link + '</span></div><div class=\"clear\">';\r\n        }\r\n        var html = '';\r\n        html += '<div class=\"menuClose\"><div class=\"closeButton closeMenu\"></div>' + i18n.viewer.shareMenu.menuTitle + '<div class=\"clear\"></div></div>';\r\n        html += '<div class=\"shareContainer\">';\r\n        html += '<div class=\"Pad\">';\r\n        html += '<h3>' + i18n.viewer.shareMenu.shareHeader + '</h3>';\r\n        html += '<input id=\"inputShare\" value=\"\" type=\"text\" class=\"mapInput inputSingle\" size=\"20\" readonly>';\r\n        html += '<span tabindex=\"0\" id=\"fbImage\" title=\"' + i18n.viewer.shareMenu.facebookHeader + '\"><span class=\"icon\"></span>' + i18n.viewer.shareMenu.facebook + '</span><span tabindex=\"0\" id=\"twImage\" title=\"' + i18n.viewer.shareMenu.twitterHeader + '\"><span class=\"icon\"></span>' + i18n.viewer.shareMenu.twitter + '</span></div>';\r\n        html += '<h3>' + i18n.viewer.shareMenu.instructionHeader + '</h3>';\r\n        html += '<textarea rows=\"3\" id=\"quickEmbedCode\"></textarea>';\r\n        if (configOptions.previewPage) {\r\n            html += '<span id=\"embedOptions\">' + i18n.viewer.shareMenu.preview + '</span>';\r\n        }\r\n        node = dojo.query('#shareControls')[0];\r\n        if (node) {\r\n            node.innerHTML = html;\r\n        }\r\n        // embed click\r\n        if (configOptions.previewPage) {\r\n            // on click\r\n            dojo.query(document).delegate(\"#embedOptions\", \"onclick,keyup\", function (event) {\r\n                if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                    var w = configOptions.previewSize.width;\r\n                    var h = configOptions.previewSize.height;\r\n                    var left = (screen.width / 2) - (w / 2);\r\n                    var top = (screen.height / 2) - (h / 2);\r\n                    window.open(configOptions.previewPage + configOptions.shareParams, 'embed', 'width=' + w + ',height=' + h + ',top=' + top + ',left=' + left, true);\r\n                }\r\n            });\r\n        }\r\n        // toggle share menu\r\n        dojo.query(document).delegate(\"#shareIcon\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                toggleMenus('share');\r\n            }\r\n        });\r\n        // share buttons\r\n        dojo.query(document).delegate(\"#fbImage\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                setFBLink(configOptions.shareURL);\r\n                return false;\r\n            }\r\n        });\r\n        dojo.query(document).delegate(\"#twImage\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                setTWLink(configOptions.shareURL);\r\n                return false;\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// show search\r\nfunction configureSearchBox() {\r\n    if (configOptions.showSearchBox) {\r\n        var html = '<div id=\"locateCon\" class=\"iconInput\">';\r\n        html += '<div tabindex=\"0\" id=\"submitAddress\" class=\"iconSearch\" title=\"' + i18n.viewer.search.placeholder + '\"></div>';\r\n        html += '<div tabindex=\"0\" id=\"clearAddress\" class=\"iconClear\"></div>';\r\n        html += '<input placeholder=\"' + i18n.viewer.search.placeholder + '\" id=\"address\" title=\"' + i18n.viewer.search.placeholder + '\" value=\"' + configOptions.locateName + '\" class=\"default\" autocomplete=\"off\" type=\"text\" tabindex=\"1\">';\r\n        html += '</div>';\r\n        var node = dojo.query('#locateBox')[0];\r\n        if (node) {\r\n            node.innerHTML = html;\r\n        }\r\n        // close autocomplete\r\n        dojo.query(document).delegate(\".slideMenu .menuClose .closeAC\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                hideAC();\r\n            }\r\n        });\r\n        // search box javascript\r\n        dojo.query(document).delegate(\"#address\", \"onclick\", function (event) {\r\n            if (event.type === 'click') {\r\n                var cAVal2 = dojo.query(this).attr('value');\r\n                if (cAVal2 === '') {\r\n                    clearAddress(this);\r\n                }\r\n                hideAC();\r\n            }\r\n        });\r\n        dojo.query(document).delegate(\"#submitAddress\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                clearTimeout(configOptions.mapTimer);\r\n                resetLocateLayer();\r\n                locate();\r\n                hideAC();\r\n            }\r\n        });\r\n        // auto complete && address specific action listeners\r\n        dojo.query(document).delegate('#address', \"keyup\", function (event) {\r\n            var aquery = dojo.query(this).attr('value')[0];\r\n            var alength = aquery.length;\r\n            var lists;\r\n            if (event.keyCode === 13 && dojo.query(this).attr('value')[0] !== '') {\r\n                clearTimeout(configOptions.mapTimer);\r\n                resetLocateLayer();\r\n                locate();\r\n                hideAC();\r\n            } else if (event.keyCode === 38) {\r\n                resetHideACTimeout();\r\n                lists = dojo.query('#autoComplete li');\r\n                var listsLen = lists.length;\r\n                if (listsLen) {\r\n                    lists[listsLen - 1].focus();\r\n                }\r\n            } else if (event.keyCode === 40) {\r\n                resetHideACTimeout();\r\n                lists = dojo.query('#autoComplete li');\r\n                if (lists[0]) {\r\n                    lists[0].focus();\r\n                }\r\n            } else if (alength >= 2) {\r\n                clearTimeout(configOptions.autocompleteShowTimer);\r\n                configOptions.autocompleteShowTimer = setTimeout(function () {\r\n                    locateQuery(aquery, map.extent.spatialReference.wkid, 6, showAutoComplete);\r\n                }, 300);\r\n            } else {\r\n                hideAC();\r\n            }\r\n            checkAddressStatus(this);\r\n        });\r\n        dojo.query(document).delegate(\"#autoComplete ul li\", \"onclick,keyup\", function (event) {\r\n            var liSize = dojo.query('#autoComplete ul li').length;\r\n            var locTxt = dojo.query(this).text();\r\n            var locNum = parseInt(dojo.query(this).attr('data-index')[0], 10);\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                dojo.query('#address').attr('value', locTxt);\r\n                configOptions.locateName = locTxt;\r\n                setSharing();\r\n                showResults(configOptions.autocompleteResults, locNum);\r\n                hideAC();\r\n            } else if (event.type === 'keyup' && event.keyCode === 38) {\r\n                resetHideACTimeout();\r\n                newIndex = locNum - 1;\r\n                if (newIndex < 0) {\r\n                    newIndex = liSize - 1;\r\n                }\r\n                dojo.query('#autoComplete li')[newIndex].focus();\r\n            } else if (event.type === 'keyup' && event.keyCode === 40) {\r\n                resetHideACTimeout();\r\n                newIndex = locNum + 1;\r\n                if (newIndex >= liSize) {\r\n                    newIndex = 0;\r\n                }\r\n                dojo.query('#autoComplete li')[newIndex].focus();\r\n            }\r\n        });\r\n        dojo.query(document).delegate(\"#clearAddress\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                var obj = dojo.query(this).next('input');\r\n                clearAddress(obj);\r\n                resetLocateLayer();\r\n                hideAC();\r\n            }\r\n        });\r\n        // LOCATE\r\n        if (configOptions.locateName) {\r\n            checkAddressStatus('#address');\r\n        }\r\n        // Home extent\r\n        dojo.query(document).delegate(\"#homeExtent\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                map.setExtent(configOptions.startExtent);\r\n            }\r\n        });\r\n        dojo.query(document).delegate(\"#inputShare, #quickEmbedCode\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                dojo.query(this)[0].select();\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// show about button if url is set\r\nfunction configureAboutText() {\r\n    if (configOptions.itemInfo.item.description && configOptions.showAboutDialog) {\r\n        // insert html\r\n        var node = dojo.byId('aboutMapCon');\r\n        if (node) {\r\n            node.innerHTML = '<span tabindex=\"0\" class=\"barButton\" id=\"aboutMap\" title=\"' + i18n.viewer.buttons.aboutTitle + '\"><span class=\"barIcon aboutInfo\"></span>' + i18n.viewer.buttons.about + '</span>';\r\n        }\r\n        node = dojo.byId('aboutDialog');\r\n        var html = '';\r\n        html += '<div class=\"padContainer\">';\r\n        html += '<h2 tabindex=\"0\">' + configOptions.itemInfo.item.title + '</h2>';\r\n        html += '<div class=\"desc\">' + configOptions.itemInfo.item.description + '</div>';\r\n        html += '<div class=\"clear\"></div>';\r\n        // see if not just empty HTML tags\r\n        if(configOptions.itemInfo.item.licenseInfo){\r\n            var result = configOptions.itemInfo.item.licenseInfo.replace(/(<([^>]+)>)/ig, \"\");\r\n            if (configOptions.itemInfo.item.licenseInfo && result) {\r\n                html += '<h3>' + i18n.viewer.about.access + '</h3>';\r\n                html += '<div class=\"license\">' + configOptions.itemInfo.item.licenseInfo + '</div>';\r\n            }\r\n        }\r\n        html += '</div>';\r\n        if (node) {\r\n            node.innerHTML = html;\r\n        }\r\n        dojo.query(document).delegate(\"#aboutMap\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                this.blur();\r\n                hideAllMenus();\r\n                toggleAboutMap(this);\r\n            }\r\n        });\r\n        var props = {\r\n            //style: \"width:550px;\",\r\n            style: \"width:52%; max-width:725px; min-width:400px;\",\r\n            draggable: true,\r\n            modal: false,\r\n            showTitle: true,\r\n            title: i18n.viewer.about.title\r\n        };\r\n        configOptions.aboutDialog = new dijit.Dialog(props, dojo.byId('aboutDialog'));\r\n        node = dojo.query('#aboutDialog .dijitDialogTitle')[0];\r\n        if (node) {\r\n            node.innerHTML = '<span class=\"inlineIcon aboutInfo\"></span>' + i18n.viewer.about.title;\r\n        }\r\n        if (configOptions.showAboutDialogOnLoad) {\r\n            configOptions.aboutDialog.show();\r\n        }\r\n        dojo.connect(configOptions.aboutDialog, 'onHide', function(){\r\n            var buttons = dojo.query('#mapcon .barButton');\r\n            if(buttons && buttons.length > 0){\r\n                buttons.removeClass('barSelected');\r\n                for (var i = 0; i < buttons.length; i++) {\r\n                    buttons[i].blur();\r\n                }\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\nfunction createCustomSlider() {\r\n    var node = dojo.byId('zoomSlider');\r\n    var html = '';\r\n    if (configOptions.showGeolocation && navigator.geolocation) {\r\n        html += '<div tabindex=\"0\" title=\"' + i18n.viewer.places.myLocationTitle + '\" id=\"geoLocate\"></div>';\r\n        // geolocate click\r\n        dojo.query(document).delegate(\"#geoLocate\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                navigator.geolocation.getCurrentPosition(geoLocateMap, geoLocateMapError, {\r\n                    maximumAge: 3000,\r\n                    timeout: 5000,\r\n                    enableHighAccuracy: true\r\n                });\r\n            }\r\n        });\r\n    } else {\r\n        configOptions.showGeolocation = false;\r\n    }\r\n    var homeClass = '';\r\n    if (!configOptions.showGeolocation) {\r\n        homeClass = 'noGeo';\r\n    }\r\n    html += '<div tabindex=\"0\" title=\"' + i18n.viewer.general.homeExtent + '\" id=\"homeExtent\" class=\"' + homeClass + '\"></div>';\r\n    html += '<div id=\"customZoom\"></div>';\r\n    if (node) {\r\n        node.innerHTML = html;\r\n    }\r\n    dojo.connect(map, \"onZoomEnd\", function (evt) {\r\n\t\tvar level = map.getLevel();\r\n\t\tif(level !== -1 && configOptions.mapZoomBar){\r\n\t\t\tconfigOptions.mapZoomBar.set(\"value\", level);\r\n\t\t}\r\n    });\r\n    setTimeout(function () {\r\n        var sliderMax;\r\n        var mapLevel;\r\n        if (map.getLevel() !== -1) {\r\n            mapLevel = map.getLevel();\r\n        }\r\n        if (map._params && map._params.lods) {\r\n            sliderMax = map._params.lods.length - 1;\r\n        }\r\n\t\tif(typeof sliderMax !== 'undefined' && typeof mapLevel !== 'undefined' ){\r\n\t\t\tconfigOptions.mapZoomBar = new dijit.form.VerticalSlider({\r\n\t\t\t\tname: \"slider\",\r\n\t\t\t\tshowButtons: true,\r\n\t\t\t\tvalue: mapLevel,\r\n\t\t\t\tminimum: 0,\r\n\t\t\t\tmaximum: sliderMax,\r\n\t\t\t\tdiscreteValues: sliderMax,\r\n\t\t\t\tstyle: 'height:130px;',\r\n\t\t\t\tintermediateChanges: true,\r\n\t\t\t\tonChange: function (value) {\r\n\t\t\t\t\tvar level = parseInt(value, 10);\r\n\t\t\t\t\tif (map.getLevel() !== level) {\r\n\t\t\t\t\t\tmap.setLevel(level);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}, \"customZoom\");\r\n\t\t}\r\n    }, 500);\r\n}\r\n\r\n// application title\r\nfunction configureAppTitle() {\r\n    document.title = configOptions.itemInfo.item.title;\r\n    var node = dojo.byId('mapTitle');\r\n    if (node) {\r\n        node.innerHTML = configOptions.itemInfo.item.title;\r\n        dojo.query(node).attr('title', configOptions.itemInfo.item.title);\r\n    }\r\n    dojo.query('meta[name=\"Description\"]').attr('content', configOptions.itemInfo.item.snippet);\r\n    dojo.query('meta[property=\"og:image\"]').attr('content', configOptions.sharingurl + '/' + configOptions.itemInfo.item.id + '/info/' + configOptions.itemInfo.item.thumbnail);\r\n}\r\n\r\nfunction extentReady() {\r\n    map.setExtent(configOptions.startExtent);\r\n    // set zoom level\r\n    if (configOptions.level) {\r\n        map.setLevel(parseInt(configOptions.level, 10));\r\n    }\r\n    if (configOptions.locatePoint[0] && configOptions.locatePoint[1]) {\r\n        var point = new esri.geometry.Point([configOptions.locatePoint[0], configOptions.locatePoint[1]], new esri.SpatialReference({\r\n            wkid: map.spatialReference.wkid\r\n        }));\r\n        if (point) {\r\n            setMarker(point, configOptions.locateName);\r\n        }\r\n    }\r\n}\r\n\r\n// Configure\r\nfunction configureUserInterface() {\r\n    configureAppTitle();\r\n    createCustomSlider();\r\n    rightSideMenuButtons();\r\n    configureShareMenu();\r\n    configureSearchBox();\r\n    configureAboutText();\r\n    // short delay\r\n    setTimeout(function () {\r\n        extentReady();\r\n        setTimeout(function () {\r\n            updateSocialLayers();\r\n            dojo.connect(map, \"onExtentChange\", function (extent) {\r\n                // hide about panel if open\r\n                hideAboutMap();\r\n                // update current extent\r\n                configOptions.extent = [extent.xmin, extent.ymin, extent.xmax, extent.ymax];\r\n                // update sharing link\r\n                setSharing();\r\n                // hide auto complete\r\n                hideAC();\r\n                // reset refresh timer for social media\r\n                resetSocialRefreshTimer();\r\n            });\r\n        }, 800);\r\n        setSharing();\r\n    }, 800);\r\n}\r\n\r\n// add menus to dom\r\nfunction addSlideMenus() {\r\n    var html = '';\r\n    html += '<div id=\"dataMenuCon\">';\r\n    html += '<div data-menu=\"share\" id=\"shareControls\" class=\"slideMenu\"></div>';\r\n    html += '<div data-menu=\"autocomplete\" id=\"autoComplete\" class=\"slideMenu\"></div>';\r\n    html += '<div data-menu=\"places\" id=\"placesMenu\" class=\"slideMenu listMenu\"></div>';\r\n    html += '<div data-menu=\"basemap\" id=\"basemapMenu\" class=\"slideMenu\"></div>';\r\n    html += '<div data-menu=\"layers\" id=\"layersMenu\" class=\"slideMenu listMenu\"></div>';\r\n    html += '<div data-menu=\"social\" id=\"socialMenu\" class=\"slideMenu listMenu\"></div>';\r\n    html += '<div data-menu=\"legend\" id=\"legendMenu\" class=\"slideMenu\"></div>';\r\n    html += '</div>';\r\n    var node = dojo.query('#mapcon')[0];\r\n    if (node) {\r\n        dojo.place(html, node, \"last\");\r\n    }\r\n    dojo.query('#mapcon .slideMenu').style('display', 'none');\r\n}\r\n\r\n// webmap object returned. Create map data\r\nfunction webmapReturned(response) {\r\n    // webmap layers\r\n    var layers = response.itemInfo.itemData.operationalLayers;\r\n    // webmap\r\n    map = response.map;\r\n    // map connect functions\r\n    dojo.connect(window, \"onresize\", resizeMap);\r\n    // webmap item info\r\n    configOptions.itemInfo = response.itemInfo;\r\n    // webmap item data\r\n    configOptions.itemData = response.itemInfo.itemData;\r\n    // use places from agol bookmarks\r\n    configOptions.bookmarks = response.itemInfo.itemData.bookmarks;\r\n    // webmap presentation layer\r\n    configOptions.presentation = response.itemInfo.itemData.presentation;\r\n    // webmap operational layers\r\n    configOptions.itemLayers = response.itemInfo.itemData.operationalLayers;\r\n    // webmap basemap title by default\r\n    configOptions.basemapTitle = response.itemInfo.itemData.baseMap.title;\r\n\t// once map is loaded\r\n\tif (map.loaded) {\r\n\t\tmapIsLoaded();\r\n\t} else {\r\n\t\tdojo.connect(map, \"onLoad\", function () {\r\n\t\t\tmapIsLoaded();\r\n\t\t});\r\n\t}\r\n}\r\n\r\nfunction mapIsLoaded(){\r\n\t// create basemap gallery widget\r\n\tcreateBMGallery();\r\n\t// set up social media\r\n\tconfigureSocialMedia();\r\n\t// set up layer menu\r\n\tconfigureLayers();\r\n\t// set up places menu\r\n\tconfigurePlaces();\r\n\t// resize map\r\n\tresizeMap();\r\n\t// init UI\r\n\tconfigureUserInterface();\r\n\t// start extent\r\n\tsetExtentValues();\r\n\t// if local impact\r\n\tif(typeof initLocalImpact === 'function' && configOptions.localImpact && configOptions.localImpact.enabled) {\r\n\t\tinitLocalImpact();\r\n\t}\r\n}\r\n\r\n// Info window popup creation\r\nfunction configurePopup() {\r\n    // popup dijit configuration\r\n    configOptions.customPopup = new esri.dijit.Popup({\r\n        offsetX: 3,\r\n        fillSymbol: false,\r\n        highlight: false,\r\n        lineSymbol: false,\r\n        marginLeft: 10,\r\n        marginTop: 10,\r\n        markerSymbol: false,\r\n        offsetY: 3,\r\n        zoomFactor: 4\r\n    }, dojo.create(\"div\"));\r\n    // connects for popup\r\n    dojo.connect(configOptions.customPopup, \"maximize\", hideAllMenus);\r\n    dojo.connect(configOptions.customPopup, \"onSelectionChange\", overridePopupTitle);\r\n    dojo.connect(configOptions.customPopup, \"onHide\", clearPopupValues);\r\n    // popup theme\r\n    dojo.addClass(configOptions.customPopup.domNode, \"modernGrey\");\r\n}\r\n\r\n// Create the map object for the template\r\nfunction createWebMap() {\r\n    // configure popup\r\n    configurePopup();\r\n    // create map deferred with options\r\n    var mapDeferred = esri.arcgis.utils.createMap(configOptions.webmap, 'map', {\r\n        mapOptions: {\r\n            slider: false,\r\n            wrapAround180: true,\r\n            infoWindow: configOptions.customPopup,\r\n            isScrollWheelZoom: true\r\n        },\r\n        bingMapsKey: configOptions.bingMapsKey,\r\n        geometryServiceURL: configOptions.geometryserviceurl\r\n    });\r\n    // on successful response\r\n    mapDeferred.addCallback(function (response) {\r\n        webmapReturned(response);\r\n    });\r\n    // on error response\r\n    mapDeferred.addErrback(function (error) {\r\n        alertDialog(i18n.viewer.errors.createMap + \": \" + error.message);\r\n    });\r\n}\r\n\r\n// Initial function\r\nfunction init() {\r\n    // Overwrite from url values\r\n    setConfigOptions();\r\n    // add menus\r\n    addSlideMenus();\r\n    // Create Map\r\n    createWebMap();\r\n    // filtering\r\n    if(typeof createSMFBadWords === 'function') {\r\n         createSMFBadWords();\r\n    }\r\n    if(typeof createSMFOffensive === 'function') {\r\n        createSMFOffensive();\r\n    }\r\n}\r\n\r\n// On load of libraries\r\ndojo.addOnLoad(function () {\r\n    // set localization\r\n    i18n = dojo.i18n.getLocalization(\"esriTemplate\", \"template\");\r\n    setConfigOptions();\r\n    // dojo ready\r\n    setAppIdSettings(init);\r\n});"]],"start1":0,"start2":0,"length1":0,"length2":34170}]],"length":34170}
{"contributors":[],"silentsave":true,"ts":1357932863495,"patch":[[{"diffs":[[0,"nu Bar\r\n    "],[1,"//"],[0,"dojo.query('"]],"start1":13551,"start2":13551,"length1":24,"length2":26}]],"length":34172,"saved":false}
