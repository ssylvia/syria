{"ts":1357944980551,"silentsave":true,"restoring":false,"patch":[[{"diffs":[[1,"function toggleSettingsContent() {\r\n    var node = dojo.query('#collapseIcon')[0];\r\n    var panel = dojo.query('#settingsDialog .dijitDialogPaneContent');\r\n    dojo.toggleClass(node, \"iconDown\");\r\n    if (dojo.hasClass(node, \"iconDown\")) {\r\n        panel.style('display', 'none');\r\n    } else {\r\n        panel.style('display', 'block');\r\n    }\r\n}\r\n\r\n// return date object for flickr dateFrom and dateTo\r\nfunction getFlickrDate(type) {\r\n    var todate = new Date();\r\n    todate = dojo.date.add(todate, \"minute\", - 5);\r\n    var fromdate;\r\n    switch (configOptions.flickrRange.toLowerCase()) {\r\n    case \"today\":\r\n        if (type === 'to') {\r\n            return todate;\r\n        } else {\r\n            fromdate = dojo.date.add(todate, \"day\", - 1);\r\n            return fromdate;\r\n        }\r\n        break;\r\n    case \"this_week\":\r\n        if (type === 'to') {\r\n            return todate;\r\n        } else {\r\n            fromdate = dojo.date.add(todate, \"week\", - 1);\r\n            return fromdate;\r\n        }\r\n        break;\r\n    case \"this_month\":\r\n        if (type === 'to') {\r\n            return todate;\r\n        } else {\r\n            fromdate = dojo.date.add(todate, \"month\", - 1);\r\n            return fromdate;\r\n        }\r\n        break;\r\n    case \"all_time\":\r\n        return false;\r\n    default:\r\n        return false;\r\n    }\r\n}\r\n\r\nfunction smLayerChange(event) {\r\n    if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n        var id = dojo.query(this).attr('data-id')[0];\r\n        var layer = getSocialLayer(id);\r\n        if (layer) {\r\n            layer.change();\r\n        }\r\n    }\r\n}\r\n\r\n// settings panel ui\r\nfunction configureSettingsUI() {\r\n    var props = {\r\n        style: \"width: 400px\",\r\n        draggable: true,\r\n        showTitle: true,\r\n        title: i18n.viewer.settings.title\r\n    };\r\n    // new dijit.Dialog(\r\n    configOptions.settingsDialog = new dijit.Dialog(props, dojo.byId('settingsDialog'));\r\n    var node = dojo.query('#settingsDialog .dijitDialogTitle')[0];\r\n    if (node) {\r\n        node.innerHTML = '<div id=\"collapseIcon\"></div><span class=\"configIcon\"></span><span id=\"settingsTitle\">' + i18n.viewer.settings.title + '</span>';\r\n    }\r\n\r\n    // Settings Menu Config\r\n    dojo.query(document).delegate(\"#cfgMenu .mapButton\", \"onclick,keyup\", function (event) {\r\n        if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n            dojo.query('#cfgMenu .mapButton').removeClass('buttonSelected');\r\n            dojo.query(this).addClass('buttonSelected');\r\n            var id = dojo.query(this).attr('data-layer')[0];\r\n            var panelObj = dojo.query('#settingsDialog .cfgPanel[data-layer=' + id + ']');\r\n            dojo.query(\"#settingsDialog .cfgPanel\").style('display', 'none');\r\n            panelObj.style('display', 'block');\r\n        }\r\n    });\r\n\r\n    dojo.query(document).delegate(\"#collapseIcon\", \"click\", function (event) {\r\n        if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n            toggleSettingsContent();\r\n        }\r\n    });\r\n\r\n    dojo.query(document).delegate(\"#socialList li:not(.cLoading) .toggle\", \"onclick,keyup\", function (event) {\r\n        if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n            toggleChecked(this);\r\n            var changeMapVal = dojo.query(this).parent('li').attr('data-layer')[0];\r\n            toggleMapLayerSM(changeMapVal);\r\n        }\r\n    });\r\n\r\n    dojo.query(document).delegate(\"#settingsDialog .dijitDialogTitleBar\", \"dblclick\", function (event) {\r\n        toggleSettingsContent();\r\n    });\r\n\r\n    for (var i = 0; i < configOptions.socialLayers.length; i++) {\r\n        dojo.query(document).delegate('#' + configOptions.socialLayers[i].options.id + '_input', \"keyup\", smLayerChange);\r\n        dojo.query(document).delegate('#' + configOptions.socialLayers[i].options.id + '_submit', \"onclick,keyup\", smLayerChange);\r\n    }\r\n}\r\n\r\nfunction clearDataPoints() {\r\n    for (var i = 0; i < configOptions.socialLayers.length; i++) {\r\n        configOptions.socialLayers[i].clear();\r\n    }\r\n}\r\n\r\nfunction getSocialLayer(id) {\r\n    for (var i = 0; i < configOptions.socialLayers.length; i++) {\r\n        if (configOptions.socialLayers[i].options.id === id) {\r\n            return configOptions.socialLayers[i];\r\n        }\r\n    }\r\n    return false;\r\n}\r\n\r\n// gets string for social media popup title\r\nfunction getSmPopupTitle() {\r\n    var graphic = configOptions.customPopup.getSelectedFeature();\r\n    var socialString = '';\r\n    var pagString = '';\r\n    if (graphic) {\r\n        if (graphic.attributes.smType) {\r\n            var total = configOptions.customPopup.count;\r\n            var current = configOptions.customPopup.selectedIndex + 1;\r\n            var socialObject;\r\n            // if more than 1\r\n            if (total > 1) {\r\n                pagString = '<span class=\"pageInfo\">(' + dojo.number.format(current) + ' ' + i18n.viewer.general.of + ' ' + dojo.number.format(total) + ')</span>';\r\n            }\r\n            var layer = getSocialLayer(graphic.attributes.smType);\r\n            if (layer) {\r\n                socialObject = {\r\n                    title: layer.options.title,\r\n                    legendIcon: layer.options.legendIcon\r\n                };\r\n            }\r\n            if (socialObject) {\r\n                socialString = '<span title=\"' + socialObject.title + '\" class=\"iconImg\" style=\"background-image:url(' + socialObject.legendIcon + ');\"></span>' + '<span class=\"titleInfo\">' + socialObject.title + '</span>';\r\n            }\r\n        }\r\n    }\r\n    configOptions.activeFeature = graphic;\r\n    return socialString + pagString;\r\n}\r\n\r\n// overrides popup title for social media to add image\r\nfunction overridePopupTitle() {\r\n    hideAllMenus();\r\n    configOptions.customPopup.setTitle(getSmPopupTitle());\r\n    if(typeof addReportInAppButton === 'function') {\r\n        addReportInAppButton();\r\n    }\r\n}\r\n\r\n// update social layers\r\nfunction updateSocialLayers() {\r\n    for (var i = 0; i < configOptions.socialLayers.length; i++) {\r\n        configOptions.socialLayers[i].newQuery();\r\n    }\r\n}\r\n\r\n// reset social refresh timer\r\nfunction resetSocialRefreshTimer() {\r\n    clearTimeout(configOptions.autoRefreshTimer);\r\n    configOptions.autoRefreshTimer = setTimeout(function () {\r\n        updateSocialLayers();\r\n    }, 4000);\r\n}\r\n\r\n// toggle social media layer on and off\r\nfunction toggleMapLayerSM(layerid) {\r\n    clearTimeout(configOptions.autoRefreshTimer);\r\n    var layer = getSocialLayer(layerid);\r\n    var layerList = dojo.query('#socialMenu li[data-layer=\"' + layerid + '\"]');\r\n    if (dojo.hasClass(layerList[0], 'checked')) {\r\n        layer.newQuery(true);\r\n    } else {\r\n        dojo.query('#' + layerid + '_load').style('display', 'none');\r\n        layer.clear();\r\n    }\r\n    setSharing();\r\n}\r\n\r\n// display points\r\nfunction pointDisplay(display) {\r\n    var i;\r\n    switch (display) {\r\n    case 'heatmap':\r\n        if (clusterLayer) {\r\n            clusterLayer.setVisibility(false);\r\n        }\r\n        if (heatLayer) {\r\n            heatLayer.setVisibility(true);\r\n        }\r\n        if (configOptions.socialLayers) {\r\n            for (i = 0; i < configOptions.socialLayers.length; i++) {\r\n                configOptions.socialLayers[i].hide();\r\n            }\r\n        }\r\n        configOptions.socialDisplay = 'heatmap';\r\n        break;\r\n    case 'cluster':\r\n        if (heatLayer) {\r\n            heatLayer.setVisibility(false);\r\n        }\r\n        if (clusterLayer) {\r\n            clusterLayer.setVisibility(true);\r\n        }\r\n        if (configOptions.socialLayers) {\r\n            for (i = 0; i < configOptions.socialLayers.length; i++) {\r\n                configOptions.socialLayers[i].hide();\r\n            }\r\n        }\r\n        configOptions.socialDisplay = 'cluster';\r\n        break;\r\n    default:\r\n        if (heatLayer) {\r\n            heatLayer.setVisibility(false);\r\n        }\r\n        if (clusterLayer) {\r\n            clusterLayer.setVisibility(false);\r\n        }\r\n        if (configOptions.socialLayers) {\r\n            for (i = 0; i < configOptions.socialLayers.length; i++) {\r\n                configOptions.socialLayers[i].show();\r\n            }\r\n        }\r\n        configOptions.socialDisplay = 'point';\r\n    }\r\n}\r\n\r\n// toggle display as clusters/heatmap\r\nfunction toggleDisplayAs(obj) {\r\n    dojo.query('#displayAs .mapButton').removeClass('buttonSelected');\r\n    // data type variable\r\n    var dataType = dojo.query(obj).attr('data-type')[0];\r\n    if (dataType === 'heatmap' && isCanvasSupported()) {\r\n        pointDisplay('heatmap');\r\n    } else if (dataType === 'cluster') {\r\n        pointDisplay('cluster');\r\n    } else {\r\n        pointDisplay('point');\r\n    }\r\n    configOptions.customPopup.hide();\r\n    setSharing();\r\n    // class\r\n    dojo.query(obj).addClass('buttonSelected');\r\n}\r\n\r\n// heatmap / clusters toggle\r\nfunction insertSMToggle() {\r\n    if (configOptions.showDisplaySwitch) {\r\n        var clusterClass = '';\r\n        var heatmapClass = '';\r\n        var pointClass = '';\r\n        var clusterButton = 'buttonMiddle ';\r\n        var html = '';\r\n        if(!isCanvasSupported()){\r\n            clusterButton = 'buttonBottom ';\r\n            if(configOptions.socialDisplay === 'heatmap'){\r\n                configOptions.socialDisplay = 'point';\r\n            }\r\n        }\r\n        if (configOptions.socialDisplay === 'heatmap') {\r\n            heatmapClass = 'buttonSelected';\r\n        } else if (configOptions.socialDisplay === 'cluster') {\r\n            clusterClass = 'buttonSelected';\r\n        } else {\r\n            pointClass = 'buttonSelected';\r\n        }\r\n        html += '<div id=\"displayAs\" class=\"displayAs\">';\r\n        html += '<div class=\"displayAsText\">' + i18n.viewer.buttons.displayAs + '</div>';\r\n        html += '<div tabindex=\"0\" title=\"' + i18n.viewer.buttons.point + '\" data-type=\"point\" class=\"mapButton pointButton buttonTop ' + pointClass + '\"><span class=\"iconBlock\"></span>' + i18n.viewer.buttons.point + '</div>';\r\n        html += '<div tabindex=\"0\" title=\"' + i18n.viewer.buttons.cluster + '\" data-type=\"cluster\" class=\"mapButton clusterButton ' + clusterButton + clusterClass + '\"><span class=\"iconBlock\"></span>' + i18n.viewer.buttons.cluster + '</div>';\r\n        if(isCanvasSupported()){\r\n            html += '<div tabindex=\"0\" title=\"' + i18n.viewer.buttons.heatmap + '\" data-type=\"heatmap\" class=\"mapButton heatButton buttonBottom ' + heatmapClass + '\"><span class=\"iconBlock\"></span>' + i18n.viewer.buttons.heatmap + '</div>';\r\n        }\r\n        html += '</div>';\r\n        var node = dojo.byId('socialMenu');\r\n        if (node) {\r\n            dojo.place(html, node, \"last\");\r\n        }\r\n        dojo.query(document).delegate(\"#displayAs .mapButton\", \"onclick,keyup\", function (event) {\r\n            if (event.type === 'click' || (event.type === 'keyup' && event.keyCode === 13)) {\r\n                toggleDisplayAs(this);\r\n            }\r\n        });\r\n    }\r\n}\r\n\r\n// insert social media list item\r\nfunction insertSMItem(obj) {\r\n    if (obj) {\r\n        // layer default class\r\n        var layerClass = 'layer';\r\n        var key;\r\n        // if layer is checked\r\n        if (obj.visible) {\r\n            // set class to checked\r\n            layerClass = 'layer checked';\r\n        }\r\n        // compose html list string\r\n        var html = '';\r\n        html += '<li data-layer=\"' + obj.uniqueID + '\" class=\"' + layerClass + '\">';\r\n        html += '<div class=\"cover\"></div>';\r\n        if (obj.showSocialSettings) {\r\n            html += ' <span tabindex=\"0\" class=\"cBconfig\" title=\"' + obj.title + ' ' + i18n.viewer.layer.searchSettings + '\"></span>';\r\n        }\r\n        if (obj.description) {\r\n            html += '<span tabindex=\"0\" class=\"cBinfo\" title=\"' + i18n.viewer.layer.information + '\"></span>';\r\n        }\r\n        html += '<span tabindex=\"0\" class=\"toggle cBox\"></span>';\r\n        html += '<span tabindex=\"0\" class=\"toggle cBicon\"><img alt=\"' + obj.title + '\" title=\"' + obj.title + '\" width=\"16\" height=\"16\" src=\"' + obj.legendIcon + '\" /></span>';\r\n        html += '<span tabindex=\"0\" class=\"toggle cBtitle\">' + obj.title + '<span class=\"count\"></span></span>';\r\n        html += '<div class=\"clear\"></div>';\r\n        if (obj.description) {\r\n            html += '<div title=\"' + i18n.viewer.general.close + '\" class=\"infoHidden\">';\r\n            html += '<div class=\"ihClose\"></div>';\r\n            html += '<div>' + obj.description;\r\n            html += '<span class=\"filtered\">';\r\n            if (obj.searchTerm) {\r\n                html += ' ' + i18n.viewer.layer.filteredBy + ' \"<span class=\"keyword\">' + obj.searchTerm + '</span>.\"';\r\n            }\r\n            html += '</span>';\r\n            html += '</div>';\r\n            html += '</div>';\r\n        }\r\n        html += '</li>';\r\n        // insert html\r\n        var node = dojo.byId('socialList');\r\n        if (node) {\r\n            dojo.place(html, node, \"last\");\r\n        }\r\n    }\r\n}\r\n\r\n// update heat map\r\nfunction updateDataPoints() {\r\n    var dataPoints = [];\r\n    for (var i = 0; i < configOptions.socialLayers.length; i++) {\r\n        var list = dojo.query('#socialMenu .layer[data-layer=' + configOptions.socialLayers[i].options.id + ']');\r\n        if (list[0] && configOptions.socialLayers[i].dataPoints && dojo.hasClass(list[0], \"checked\")) {\r\n            dataPoints = dataPoints.concat(configOptions.socialLayers[i].dataPoints);\r\n        }\r\n    }\r\n    if (heatLayer) {\r\n        heatLayer.setData(dataPoints);\r\n    }\r\n    if (clusterLayer) {\r\n        clusterLayer.setData(dataPoints);\r\n    }\r\n}\r\n\r\n\r\n// insert settings panel html\r\nfunction insertSettingsHTML() {\r\n    var html = '';\r\n    html += '<div class=\"padContainer\">';\r\n    html += '<div class=\"cfgMenu\" id=\"cfgMenu\"></div>';\r\n    html += '<div class=\"Pad \">';\r\n    html += '<div class=\"clear\"></div>';\r\n    if (configOptions.showFlickr) {\r\n        if (configOptions.showFlickrConfig) {\r\n            html += '<div class=\"cfgPanel\" data-layer=\"' + configOptions.flickrID + '\">';\r\n            html += '<div class=\"firstDesc\"><strong>' + i18n.viewer.settings.searchAll + ' ' + configOptions.flickrTitle + ':</strong></div>';\r\n            html += '<ul class=\"formStyle\">';\r\n            html += '<li>';\r\n            html += '<label for=\"' + configOptions.flickrID + '_input' + '\">' + i18n.viewer.settings.usingThisKeyword + '</label>';\r\n            html += '<input data-id=\"' + configOptions.flickrID + '\" id=\"' + configOptions.flickrID + '_input' + '\" class=\"mapInput inputSingle\" type=\"text\" size=\"20\" value=\"' + configOptions.flickrSearch + '\" />';\r\n            html += '</li>';\r\n            html += '<li>';\r\n            html += '<label for=\"' + configOptions.flickrID + '_range\">' + i18n.viewer.settings.fromThePast + '</label>';\r\n            html += '<select id=\"' + configOptions.flickrID + '_range\">';\r\n            html += '<option value=\"today\">' + dojo.number.format(1) + ' ' + i18n.viewer.settings.today + '</option>';\r\n            html += '<option value=\"this_week\">' + dojo.number.format(1) + ' ' + i18n.viewer.settings.this_week + '</option>';\r\n            html += '<option value=\"this_month\">' + dojo.number.format(1) + ' ' + i18n.viewer.settings.this_month + '</option>';\r\n            html += '<option value=\"all_time\">' + i18n.viewer.settings.all_time + '</option>';\r\n            html += '</select>';\r\n            html += '</li>';\r\n            html += '<li>';\r\n            html += '<label for=\"' + configOptions.flickrID + '_submit' + '\">&nbsp;</label>';\r\n            html += '<span data-id=\"' + configOptions.flickrID + '\" tabindex=\"0\" id=\"' + configOptions.flickrID + '_submit' + '\" class=\"mapSubmit\">' + i18n.viewer.settings.search + '</span><span class=\"Status\" id=\"' + configOptions.flickrID + '_load' + '\"></span>';\r\n            html += '</li>';\r\n            html += '</ul>';\r\n            html += '</div>';\r\n        }\r\n    }\r\n    if (configOptions.showTwitter) {\r\n        if (configOptions.showTwitterConfig) {\r\n            html += '<div class=\"cfgPanel\" data-layer=\"' + configOptions.twitterID + '\">';\r\n            html += '<div class=\"firstDesc\"><strong>' + i18n.viewer.settings.searchAll + ' ' + configOptions.twitterTitle + ':</strong></div>';\r\n            html += '<ul class=\"formStyle\">';\r\n            html += '<li>';\r\n            html += '<label for=\"' + configOptions.twitterID + '_input' + '\">' + i18n.viewer.settings.usingThisKeyword + '</label>';\r\n            html += '<input data-id=\"' + configOptions.twitterID + '\" id=\"' + configOptions.twitterID + '_input' + '\" class=\"mapInput inputSingle\" type=\"text\" size=\"20\" value=\"' + configOptions.twitterSearch + '\" />';\r\n            html += '<a title=\"' + i18n.viewer.settings.twSearch + '\" class=\"twInfo\" href=\"' + location.protocol + '//support.twitter.com/articles/71577-how-to-use-advanced-twitter-search\" target=\"_blank\"></a>';\r\n            html += '</li>';\r\n            html += '<li>';\r\n            html += '<label for=\"' + configOptions.twitterID + '_submit' + '\">&nbsp;</label>';\r\n            html += '<span data-id=\"' + configOptions.twitterID + '\" tabindex=\"0\" id=\"' + configOptions.twitterID + '_submit' + '\" class=\"mapSubmit\">' + i18n.viewer.settings.search + '</span><span class=\"Status\" id=\"' + configOptions.twitterID + '_load' + '\"></span>';\r\n            html += '</li>';\r\n            html += '</ul>';\r\n            html += '</div>';\r\n        }\r\n    }\r\n    if (configOptions.showYouTube) {\r\n        if (configOptions.showYouTubeConfig) {\r\n            html += '<div class=\"cfgPanel\" data-layer=\"' + configOptions.youtubeID + '\">';\r\n            html += '<div class=\"firstDesc\"><strong>' + i18n.viewer.settings.searchAll + ' ' + configOptions.youtubeTitle + ':</strong></div>';\r\n            html += '<ul class=\"formStyle\">';\r\n            html += '<li>';\r\n            html += '<label for=\"' + configOptions.youtubeID + '_input' + '\">' + i18n.viewer.settings.usingThisKeyword + '</label>';\r\n            html += '<input data-id=\"' + configOptions.youtubeID + '\" id=\"' + configOptions.youtubeID + '_input' + '\" class=\"mapInput inputSingle\" type=\"text\" size=\"20\" value=\"' + configOptions.youtubeSearch + '\" />';\r\n            html += '</li>';\r\n            html += '<li>';\r\n            html += '<label for=\"' + configOptions.youtubeID + '_range' + '\">' + i18n.viewer.settings.fromThePast + '</label>';\r\n            html += '<select id=\"' + configOptions.youtubeID + '_range' + '\">';\r\n            html += '<option value=\"today\">' + dojo.number.format(1) + ' ' + i18n.viewer.settings.today + '</option>';\r\n            html += '<option value=\"this_week\">' + dojo.number.format(1) + ' ' + i18n.viewer.settings.this_week + '</option>';\r\n            html += '<option value=\"this_month\">' + dojo.number.format(1) + ' ' + i18n.viewer.settings.this_month + '</option>';\r\n            html += '<option value=\"all_time\">' + i18n.viewer.settings.all_time + '</option>';\r\n            html += '</select>';\r\n            html += '</li>';\r\n            html += '<li>';\r\n            html += '<label for=\"' + configOptions.youtubeID + '_submit' + '\">&nbsp;</label>';\r\n            html += '<span data-id=\"' + configOptions.youtubeID + '\" tabindex=\"0\" class=\"mapSubmit\" id=\"' + configOptions.youtubeID + '_submit' + '\">' + i18n.viewer.settings.search + '</span><span class=\"Status\" id=\"' + configOptions.youtubeID + '_load' + '\"></span>';\r\n            html += '</li>';\r\n            html += '</ul>';\r\n            html += '</div>';\r\n        }\r\n    }\r\n    html += '</div>';\r\n    html += '</div>';\r\n    var node = dojo.byId('settingsDialog');\r\n    if (node) {\r\n        node.innerHTML = html;\r\n    }\r\n    //\tset select menu values\r\n    if (configOptions.showYouTube) {\r\n        dojo.query('#' + configOptions.youtubeID + '_range').attr('value', configOptions.youtubeRange);\r\n    }\r\n    //\tset select menu values\r\n    if (configOptions.showFlickr) {\r\n        dojo.query('#' + configOptions.flickrID + '_range').attr('value', configOptions.flickrRange);\r\n    }\r\n}\r\n\r\n// Social Media\r\nfunction configureSocialMedia() {\r\n    // if canvas is supported\r\n    if (isCanvasSupported()) {\r\n        // set up heat layer\r\n        heatLayer = new modules.HeatmapLayer({\r\n            config: {\r\n                \"useLocalMaximum\": true\r\n            },\r\n            id: \"heatLayer\",\r\n            map: map,\r\n            domNodeId: \"heatLayer\",\r\n            opacity: 0.85\r\n        });\r\n        map.addLayer(heatLayer);\r\n    }\r\n    // set up cluster layer\r\n    clusterLayer = new modules.ClusterLayer(null, {\r\n        map: map,\r\n        id: \"clusterLayer\",\r\n        label: i18n.viewer.buttons.cluster,\r\n        clusterImage: configOptions.clusterImage,\r\n        clusterHoverImage: configOptions.clusterHoverImage\r\n    });\r\n    configOptions.layerInfos.push({\r\n        defaultSymbol: true,\r\n        title: i18n.viewer.social.menuTitle,\r\n        layer: clusterLayer.featureLayer\r\n    });\r\n    // append list container\r\n    var node = dojo.byId('socialMenu');\r\n    if (node) {\r\n        node.innerHTML = '<div class=\"menuClose\"><div class=\"closeButton closeMenu\"></div>' + i18n.viewer.social.menuTitle + '<div class=\"clear\"></div></div><ul class=\"zebraStripes\" id=\"socialList\"></ul>';\r\n    }\r\n    // if flickr\r\n    if (configOptions.showFlickr) {\r\n        var flickrLayer = new social.flickr({\r\n            map: map,\r\n            filterUsers: configOptions.filterFlickrUsers,\r\n            filterWords: configOptions.filterWords,\r\n            title: configOptions.flickrTitle,\r\n            legendIcon: configOptions.flickrIcon,\r\n            id: configOptions.flickrID,\r\n            searchTerm: configOptions.flickrSearch,\r\n            symbolUrl: configOptions.flickrSymbol.url,\r\n            symbolHeight: configOptions.flickrSymbol.height,\r\n            symbolWidth: configOptions.flickrSymbol.width,\r\n            popupWidth: configOptions.popupWidth,\r\n            popupHeight: configOptions.popupHeight,\r\n            dateFrom: getFlickrDate('from'),\r\n            dateTo: getFlickrDate('to'),\r\n            apiKey: configOptions.flickrKey\r\n        });\r\n        configOptions.layerInfos.push({\r\n            defaultSymbol: true,\r\n            title: configOptions.flickrTitle,\r\n            layer: flickrLayer.featureLayer\r\n        });\r\n        clusterLayer.featureLayer.renderer.addValue({\r\n            value: configOptions.flickrID,\r\n            symbol: new esri.symbol.PictureMarkerSymbol({\r\n                \"url\": configOptions.flickrSymbol.url,\r\n                \"height\": configOptions.flickrSymbol.height,\r\n                \"width\": configOptions.flickrSymbol.width,\r\n                \"type\": \"esriPMS\"\r\n            }),\r\n            label: configOptions.flickrTitle\r\n        });\r\n        dojo.connect(flickrLayer.featureLayer, 'onClick', function () {\r\n            overridePopupTitle();\r\n        });\r\n        dojo.connect(flickrLayer, 'onUpdate', function () {\r\n            updateDataPoints();\r\n        });\r\n        dojo.connect(flickrLayer, 'onClear', function () {\r\n            updateDataPoints();\r\n            configOptions.flickrChecked = false;\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.flickrID + '] .count')[0];\r\n            if (node) {\r\n                node.innerHTML = '';\r\n            }\r\n        });\r\n        dojo.connect(flickrLayer, 'onUpdateEnd', function () {\r\n            var totalCount = flickrLayer.getStats().geoPoints;\r\n            hideLoading(dojo.query('#socialMenu ul li[data-layer=' + configOptions.flickrID + ']'), dojo.query('#' + configOptions.flickrID + '_load'));\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.flickrID + '] .keyword')[0];\r\n            if (node) {\r\n                node.innerHTML = configOptions.flickrSearch;\r\n            }\r\n            var textCount = '';\r\n            if (totalCount) {\r\n                textCount = ' (' + totalCount + ')' || '';\r\n            }\r\n            node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.flickrID + '] .count')[0];\r\n            if (node) {\r\n                node.innerHTML = textCount;\r\n            }\r\n        });\r\n        flickrLayer.newQuery = function (enable) {\r\n            if (enable) {\r\n                configOptions.flickrChecked = true;\r\n            }\r\n            var flList = dojo.query('#socialMenu .layer[data-layer=' + configOptions.flickrID + ']');\r\n            if (dojo.hasClass(flList[0], \"checked\")) {\r\n                flList.addClass(\"cLoading\");\r\n                var updateObj = {\r\n                    searchTerm: configOptions.flickrSearch\r\n                };\r\n                if (configOptions.flickrRange) {\r\n                    updateObj.dateFrom = getFlickrDate('from');\r\n                    updateObj.dateTo = getFlickrDate('to');\r\n                }\r\n                flickrLayer.update(updateObj);\r\n            }\r\n        };\r\n        flickrLayer.change = function () {\r\n            configOptions.flickrSearch = dojo.query('#' + configOptions.flickrID + '_input').attr('value')[0];\r\n            configOptions.flickrRange = dojo.query('#' + configOptions.flickrID + '_range').attr('value')[0];\r\n            showLoading(configOptions.flickrID + '_load');\r\n            dojo.query('#socialMenu .layer[data-layer=' + configOptions.flickrID + ']').addClass(\"checked cLoading\");\r\n            setSharing();\r\n            var html = '';\r\n            if (configOptions.flickrSearch) {\r\n                html = ' ' + i18n.viewer.layer.filteredBy + ' \"<span class=\"keyword\">' + configOptions.flickrSearch + '</span>.\"';\r\n            }\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.flickrID + '] .filtered')[0];\r\n            if (node) {\r\n                node.innerHTML = html;\r\n            }\r\n            flickrLayer.clear();\r\n            var updateObj = {\r\n                searchTerm: configOptions.flickrSearch\r\n            };\r\n            if (configOptions.flickrRange) {\r\n                updateObj.dateFrom = getFlickrDate('from');\r\n                updateObj.dateTo = getFlickrDate('to');\r\n            }\r\n            flickrLayer.update(updateObj);\r\n        };\r\n        // insert html\r\n        insertSMItem({\r\n            visible: configOptions.flickrChecked,\r\n            uniqueID: configOptions.flickrID,\r\n            title: configOptions.flickrTitle,\r\n            showSocialSettings: configOptions.showFlickrConfig,\r\n            legendIcon: configOptions.flickrIcon,\r\n            description: configOptions.flickrDescription,\r\n            searchTerm: configOptions.flickrSearch\r\n        });\r\n        configOptions.socialLayers.push(flickrLayer);\r\n    }\r\n    // if panoramio\r\n    if (configOptions.showPanoramio) {\r\n        var panoramioLayer = new social.panoramio({\r\n            map: map,\r\n            title: configOptions.panoramioTitle,\r\n            legendIcon: configOptions.panoramioIcon,\r\n            id: configOptions.panoramioID,\r\n            symbolUrl: configOptions.panoramioSymbol.url,\r\n            symbolHeight: configOptions.panoramioSymbol.height,\r\n            symbolWidth: configOptions.panoramioSymbol.width,\r\n            popupWidth: configOptions.popupWidth,\r\n            popupHeight: configOptions.popupHeight\r\n        });\r\n        configOptions.layerInfos.push({\r\n            defaultSymbol: true,\r\n            title: configOptions.panoramioTitle,\r\n            layer: panoramioLayer.featureLayer\r\n        });\r\n        clusterLayer.featureLayer.renderer.addValue({\r\n            value: configOptions.panoramioID,\r\n            symbol: new esri.symbol.PictureMarkerSymbol({\r\n                \"url\": configOptions.panoramioSymbol.url,\r\n                \"height\": configOptions.panoramioSymbol.height,\r\n                \"width\": configOptions.panoramioSymbol.width,\r\n                \"type\": \"esriPMS\"\r\n            }),\r\n            label: configOptions.panoramioTitle\r\n        });\r\n        dojo.connect(panoramioLayer.featureLayer, 'onClick', function () {\r\n            overridePopupTitle();\r\n        });\r\n        dojo.connect(panoramioLayer, 'onUpdate', function () {\r\n            updateDataPoints();\r\n        });\r\n        dojo.connect(panoramioLayer, 'onClear', function () {\r\n            updateDataPoints();\r\n            configOptions.panoramioChecked = false;\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.panoramioID + '] .count')[0];\r\n            if (node) {\r\n                node.innerHTML = '';\r\n            }\r\n        });\r\n        dojo.connect(panoramioLayer, 'onUpdateEnd', function () {\r\n            var totalCount = panoramioLayer.getStats().geoPoints;\r\n            hideLoading(dojo.query('#socialMenu ul li[data-layer=' + configOptions.panoramioID + ']'), dojo.query('#' + configOptions.panoramioID + '_load'));\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.panoramioID + '] .keyword')[0];\r\n            if (node) {\r\n                node.innerHTML = configOptions.panoramioSearch;\r\n            }\r\n            var textCount = '';\r\n            if (totalCount) {\r\n                textCount = ' (' + totalCount + ')' || '';\r\n            }\r\n            node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.panoramioID + '] .count')[0];\r\n            if (node) {\r\n                node.innerHTML = textCount;\r\n            }\r\n        });\r\n        panoramioLayer.newQuery = function (enable) {\r\n            if (enable) {\r\n                configOptions.panoramioChecked = true;\r\n            }\r\n            var prList = dojo.query('#socialMenu .layer[data-layer=' + configOptions.panoramioID + ']');\r\n            if (dojo.hasClass(prList[0], \"checked\")) {\r\n                prList.addClass(\"cLoading\");\r\n                panoramioLayer.update();\r\n            }\r\n        };\r\n        panoramioLayer.change = function () {};\r\n        // insert html\r\n        insertSMItem({\r\n            visible: configOptions.panoramioChecked,\r\n            uniqueID: configOptions.panoramioID,\r\n            title: configOptions.panoramioTitle,\r\n            showSocialSettings: false,\r\n            legendIcon: configOptions.panoramioIcon,\r\n            description: configOptions.panoramioDescription\r\n        });\r\n        configOptions.socialLayers.push(panoramioLayer);\r\n    }\r\n    // if twitter\r\n    if (configOptions.showTwitter) {\r\n        var twitterLayer = new social.twitter({\r\n            map: map,\r\n            filterUsers: configOptions.filterTwitterUsers,\r\n            filterWords: configOptions.filterWords,\r\n            title: configOptions.twitterTitle,\r\n            legendIcon: configOptions.twitterIcon,\r\n            id: configOptions.twitterID,\r\n            searchTerm: configOptions.twitterSearch,\r\n            symbolUrl: configOptions.twitterSymbol.url,\r\n            symbolHeight: configOptions.twitterSymbol.height,\r\n            symbolWidth: configOptions.twitterSymbol.width,\r\n            popupWidth: configOptions.popupWidth,\r\n            popupHeight: configOptions.popupHeight\r\n        });\r\n        configOptions.layerInfos.push({\r\n            defaultSymbol: true,\r\n            title: configOptions.twitterTitle,\r\n            layer: twitterLayer.featureLayer\r\n        });\r\n        clusterLayer.featureLayer.renderer.addValue({\r\n            value: configOptions.twitterID,\r\n            symbol: new esri.symbol.PictureMarkerSymbol({\r\n                \"url\": configOptions.twitterSymbol.url,\r\n                \"height\": configOptions.twitterSymbol.height,\r\n                \"width\": configOptions.twitterSymbol.width,\r\n                \"type\": \"esriPMS\"\r\n            }),\r\n            label: configOptions.twitterTitle\r\n        });\r\n        dojo.connect(twitterLayer, 'onUpdate', function () {\r\n            updateDataPoints();\r\n        });\r\n        dojo.connect(twitterLayer.featureLayer, 'onClick', function () {\r\n            overridePopupTitle();\r\n        });\r\n        dojo.connect(twitterLayer, 'onClear', function () {\r\n            updateDataPoints();\r\n            configOptions.twitterChecked = false;\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.twitterID + '] .count')[0];\r\n            if (node) {\r\n                node.innerHTML = '';\r\n            }\r\n        });\r\n        dojo.connect(twitterLayer, 'onUpdateEnd', function () {\r\n            var totalCount = twitterLayer.getStats().geoPoints;\r\n            hideLoading(dojo.query('#socialMenu ul li[data-layer=' + configOptions.twitterID + ']'), dojo.query('#' + configOptions.twitterID + '_load'));\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.twitterID + '] .keyword')[0];\r\n            if (node) {\r\n                node.innerHTML = configOptions.twitterSearch;\r\n            }\r\n            var textCount = '';\r\n            if (totalCount) {\r\n                textCount = ' (' + totalCount + ')' || '';\r\n            }\r\n            node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.twitterID + '] .count')[0];\r\n            if (node) {\r\n                node.innerHTML = textCount;\r\n            }\r\n        });\r\n        twitterLayer.newQuery = function (enable) {\r\n            if (enable) {\r\n                configOptions.twitterChecked = true;\r\n            }\r\n            var twList = dojo.query('#socialMenu .layer[data-layer=' + configOptions.twitterID + ']');\r\n            if (dojo.hasClass(twList[0], \"checked\")) {\r\n                twList.addClass(\"cLoading\");\r\n                twitterLayer.update({\r\n                    searchTerm: configOptions.twitterSearch\r\n                });\r\n            }\r\n        };\r\n        twitterLayer.change = function () {\r\n            configOptions.twitterSearch = dojo.query('#' + configOptions.twitterID + '_input').attr('value')[0];\r\n            dojo.query('#socialMenu .layer[data-layer=' + configOptions.twitterID + ']').addClass(\"checked cLoading\");\r\n            showLoading(configOptions.twitterID + '_load');\r\n            setSharing();\r\n            var html = '';\r\n            if (configOptions.twitterSearch) {\r\n                html = ' ' + i18n.viewer.layer.filteredBy + ' \"<span class=\"keyword\">' + configOptions.twitterSearch + '</span>.\"';\r\n            }\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.twitterID + '] .filtered')[0];\r\n            if (node) {\r\n                node.innerHTML = html;\r\n            }\r\n            twitterLayer.clear();\r\n            twitterLayer.update({\r\n                searchTerm: configOptions.twitterSearch\r\n            });\r\n        };\r\n        // insert html\r\n        insertSMItem({\r\n            visible: configOptions.twitterChecked,\r\n            uniqueID: configOptions.twitterID,\r\n            title: configOptions.twitterTitle,\r\n            showSocialSettings: configOptions.showTwitterConfig,\r\n            legendIcon: configOptions.twitterIcon,\r\n            description: configOptions.twitterDescription,\r\n            searchTerm: configOptions.twitterSearch\r\n        });\r\n        configOptions.socialLayers.push(twitterLayer);\r\n    }\r\n    // if youtube\r\n    if (configOptions.showYouTube) {\r\n        var youtubeLayer = new social.youtube({\r\n            map: map,\r\n            filterUsers: configOptions.filterYoutubeUsers,\r\n            filterWords: configOptions.filterWords,\r\n            title: configOptions.youtubeTitle,\r\n            legendIcon: configOptions.youtubeIcon,\r\n            id: configOptions.youtubeID,\r\n            key: configOptions.youtubeKey,\r\n            searchTerm: configOptions.youtubeSearch,\r\n            symbolUrl: configOptions.youtubeSymbol.url,\r\n            symbolHeight: configOptions.youtubeSymbol.height,\r\n            symbolWidth: configOptions.youtubeSymbol.width,\r\n            popupWidth: configOptions.popupWidth,\r\n            popupHeight: configOptions.popupHeight,\r\n            range: configOptions.youtubeRange\r\n        });\r\n        configOptions.layerInfos.push({\r\n            defaultSymbol: true,\r\n            title: configOptions.youtubeTitle,\r\n            layer: youtubeLayer.featureLayer\r\n        });\r\n        clusterLayer.featureLayer.renderer.addValue({\r\n            value: configOptions.youtubeID,\r\n            symbol: new esri.symbol.PictureMarkerSymbol({\r\n                \"url\": configOptions.youtubeSymbol.url,\r\n                \"height\": configOptions.youtubeSymbol.height,\r\n                \"width\": configOptions.youtubeSymbol.width,\r\n                \"type\": \"esriPMS\"\r\n            }),\r\n            label: configOptions.youtubeTitle\r\n        });\r\n        dojo.connect(youtubeLayer, 'onUpdate', function () {\r\n            updateDataPoints();\r\n        });\r\n        dojo.connect(youtubeLayer.featureLayer, 'onClick', function () {\r\n            overridePopupTitle();\r\n        });\r\n        dojo.connect(youtubeLayer, 'onClear', function () {\r\n            updateDataPoints();\r\n            configOptions.youtubeChecked = false;\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.youtubeID + '] .count')[0];\r\n            if (node) {\r\n                node.innerHTML = '';\r\n            }\r\n        });\r\n        dojo.connect(youtubeLayer, 'onUpdateEnd', function () {\r\n            var totalCount = youtubeLayer.getStats().geoPoints;\r\n            hideLoading(dojo.query('#socialMenu ul li[data-layer=' + configOptions.youtubeID + ']'), dojo.query('#' + configOptions.youtubeID + '_load'));\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.youtubeID + '] .keyword')[0];\r\n            if (node) {\r\n                node.innerHTML = configOptions.youtubeSearch;\r\n            }\r\n            var textCount = '';\r\n            if (totalCount) {\r\n                textCount = ' (' + totalCount + ')' || '';\r\n            }\r\n            node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.youtubeID + '] .count')[0];\r\n            if (node) {\r\n                node.innerHTML = textCount;\r\n            }\r\n        });\r\n        youtubeLayer.newQuery = function (enable) {\r\n            if (enable) {\r\n                configOptions.youtubeChecked = true;\r\n            }\r\n            // if youtube cbox is checked\r\n            var ytList = dojo.query('#socialMenu .layer[data-layer=' + configOptions.youtubeID + ']');\r\n            if (dojo.hasClass(ytList[0], \"checked\")) {\r\n                ytList.addClass(\"cLoading\");\r\n                youtubeLayer.update({\r\n                    searchTerm: configOptions.youtubeSearch,\r\n                    range: configOptions.youtubeRange\r\n                });\r\n            }\r\n        };\r\n        youtubeLayer.change = function () {\r\n            configOptions.youtubeSearch = dojo.query('#' + configOptions.youtubeID + '_input').attr('value')[0];\r\n            configOptions.youtubeRange = dojo.query('#' + configOptions.youtubeID + '_range').attr('value')[0];\r\n            showLoading(configOptions.youtubeID + '_load');\r\n            dojo.query('#socialMenu .layer[data-layer=' + configOptions.youtubeID + ']').addClass(\"checked cLoading\");\r\n            setSharing();\r\n            var html = '';\r\n            if (configOptions.youtubeSearch) {\r\n                html = ' ' + i18n.viewer.layer.filteredBy + ' \"<span class=\"keyword\">' + configOptions.youtubeSearch + '</span>.\"';\r\n            }\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.youtubeID + '] .filtered')[0];\r\n            if (node) {\r\n                node.innerHTML = html;\r\n            }\r\n            youtubeLayer.clear();\r\n            youtubeLayer.update({\r\n                searchTerm: configOptions.youtubeSearch,\r\n                range: configOptions.youtubeRange\r\n            });\r\n        };\r\n        // insert html\r\n        insertSMItem({\r\n            visible: configOptions.youtubeChecked,\r\n            uniqueID: configOptions.youtubeID,\r\n            title: configOptions.youtubeTitle,\r\n            showSocialSettings: configOptions.showYouTubeConfig,\r\n            legendIcon: configOptions.youtubeIcon,\r\n            description: configOptions.youtubeDescription,\r\n            searchTerm: configOptions.youtubeSearch\r\n        });\r\n        configOptions.socialLayers.push(youtubeLayer);\r\n    }\r\n    // if ushahidi\r\n    if (configOptions.showUshahidi) {\r\n        var ushahidiLayer = new social.ushahidi({\r\n            map: map,\r\n            title: configOptions.ushahidiTitle,\r\n            legendIcon: configOptions.ushahidiIcon,\r\n            id: configOptions.ushahidiID,\r\n            url: configOptions.ushahidiUrl,\r\n            symbolUrl: configOptions.ushahidiSymbol.url,\r\n            symbolHeight: configOptions.ushahidiSymbol.height,\r\n            symbolWidth: configOptions.ushahidiSymbol.width,\r\n            popup: configOptions.customPopup,\r\n            popupWidth: configOptions.popupWidth,\r\n            popupHeight: configOptions.popupHeight\r\n        });\r\n        configOptions.layerInfos.push({\r\n            defaultSymbol: true,\r\n            title: configOptions.ushahidiTitle,\r\n            layer: ushahidiLayer.featureLayer\r\n        });\r\n        clusterLayer.featureLayer.renderer.addValue({\r\n            value: configOptions.ushahidiID,\r\n            symbol: new esri.symbol.PictureMarkerSymbol({\r\n                \"url\": configOptions.ushahidiSymbol.url,\r\n                \"height\": configOptions.ushahidiSymbol.height,\r\n                \"width\": configOptions.ushahidiSymbol.width,\r\n                \"type\": \"esriPMS\"\r\n            }),\r\n            label: configOptions.ushahidiTitle\r\n        });\r\n        dojo.connect(ushahidiLayer, 'onUpdate', function () {\r\n            updateDataPoints();\r\n        });\r\n        dojo.connect(ushahidiLayer.featureLayer, 'onClick', function () {\r\n            overridePopupTitle();\r\n        });\r\n        dojo.connect(ushahidiLayer, 'onClear', function () {\r\n            updateDataPoints();\r\n            configOptions.ushahidiChecked = false;\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.ushahidiID + '] .count')[0];\r\n            if (node) {\r\n                node.innerHTML = '';\r\n            }\r\n        });\r\n        dojo.connect(ushahidiLayer, 'onUpdateEnd', function () {\r\n            var totalCount = ushahidiLayer.getStats().geoPoints;\r\n            hideLoading(dojo.query('#socialMenu ul li[data-layer=' + configOptions.ushahidiID + ']'), dojo.query('#' + configOptions.panoramioID + '_load'));\r\n            var node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.ushahidiID + '] .keyword')[0];\r\n            if (node) {\r\n                node.innerHTML = configOptions.ushahidiSearch;\r\n            }\r\n            var textCount = '';\r\n            if (totalCount) {\r\n                textCount = ' (' + totalCount + ')' || '';\r\n            }\r\n            node = dojo.query('#socialMenu .layer[data-layer=' + configOptions.ushahidiID + '] .count')[0];\r\n            if (node) {\r\n                node.innerHTML = textCount;\r\n            }\r\n        });\r\n        ushahidiLayer.newQuery = function (enable) {\r\n            if (enable) {\r\n                configOptions.ushahidiChecked = true;\r\n            }\r\n            var uhList = dojo.query('#socialMenu .layer[data-layer=' + configOptions.ushahidiID + ']');\r\n            if (dojo.hasClass(uhList[0], \"checked\")) {\r\n                uhList.addClass(\"cLoading\");\r\n                ushahidiLayer.update();\r\n            }\r\n        };\r\n        ushahidiLayer.change = function () {};\r\n        // insert html\r\n        insertSMItem({\r\n            visible: configOptions.ushahidiChecked,\r\n            uniqueID: configOptions.ushahidiID,\r\n            title: configOptions.ushahidiTitle,\r\n            showSocialSettings: false,\r\n            legendIcon: configOptions.ushahidiIcon,\r\n            description: configOptions.ushahidiDescription\r\n        });\r\n        configOptions.socialLayers.push(ushahidiLayer);\r\n    }\r\n    insertSMToggle();\r\n    insertSettingsHTML();\r\n    configureSettingsUI();\r\n    // set default visible of the two\r\n    if (configOptions.socialDisplay === 'heatmap' && isCanvasSupported()) {\r\n        pointDisplay('heatmap');\r\n    } else if (configOptions.socialDisplay === 'cluster') {\r\n        pointDisplay('cluster');\r\n    } else {\r\n        pointDisplay('point');\r\n    }\r\n    // onclick connect\r\n    dojo.connect(clusterLayer.featureLayer, \"onClick\",function (evt) {\r\n        dojo.stopEvent(evt);\r\n        var arr = [];\r\n        var query = new esri.tasks.Query();\r\n        query.geometry = evt.graphic.attributes.extent;\r\n        for (var i = 0; i < configOptions.socialLayers.length; i++) {\r\n            arr.push(configOptions.socialLayers[i].featureLayer.selectFeatures(query, esri.layers.FeatureLayer.SELECTION_NEW));\r\n        }\r\n        configOptions.customPopup.setFeatures(arr);\r\n        configOptions.customPopup.show(evt.mapPoint);\r\n        configOptions.customPopup.resize(configOptions.popupWidth, configOptions.popupHeight);\r\n        overridePopupTitle();\r\n    });\r\n\r\n    // zebra stripe layers\r\n    zebraStripe(dojo.query('#socialList li.layer'));\r\n\r\n    // settings menu generator\r\n    var settingsCount = dojo.query('#socialList li.layer .cBconfig').length;\r\n    if (settingsCount > -1) {\r\n        dojo.forEach(dojo.query('#socialList li.layer .cBconfig'), function (entry, i) {\r\n            var parent = dojo.query(entry).parent('li');\r\n            var settingsID = dojo.query(parent).attr('data-layer');\r\n            var settingsClass = getButtonClass(i + 1, settingsCount);\r\n            var settingsSource = dojo.query(parent).children('.cBicon').children('img').attr('src');\r\n            var settingsTitle = dojo.query(parent).children('.cBtitle').text();\r\n            var node = dojo.byId('cfgMenu');\r\n            if (node) {\r\n                var html = '<span tabindex=\"0\" data-layer=\"' + settingsID + '\" class=\"mapButton ' + settingsClass + '\" title=\"' + settingsTitle + '\"><img width=\"16\" height=\"16\" src=\"' + settingsSource + '\" /></span>';\r\n                dojo.place(html, node, \"last\");\r\n            }\r\n        });\r\n    }\r\n}"]],"start1":0,"start2":0,"length1":0,"length2":45785}]],"length":45785}
{"contributors":[],"silentsave":false,"ts":1357945296446,"patch":[[{"diffs":[[0,"     map: map,\r\n"],[1,"            maxpage:1\r\n"],[0,"            filt"]],"start1":21253,"start2":21253,"length1":32,"length2":55}]],"length":45808,"saved":false}
{"ts":1357945297719,"patch":[[{"diffs":[[0,"axpage:1"],[1,","],[0,"\r\n      "]],"start1":21282,"start2":21282,"length1":16,"length2":17}]],"length":45809,"saved":false}
{"ts":1357945345827,"patch":[[{"diffs":[[0,"p,\r\n"],[-1,"            maxpage:1,\r\n"],[0,"    "]],"start1":21265,"start2":21265,"length1":32,"length2":8}]],"length":45785,"saved":false}
{"contributors":[],"silentsave":true,"ts":1358185402632,"patch":[[{"diffs":[[0,"     map: map,\r\n"],[1,"            max\r\n"],[0,"            filt"]],"start1":21253,"start2":21253,"length1":32,"length2":49}]],"length":45802,"saved":false}
{"ts":1358185406867,"patch":[[{"diffs":[[0,"     max"],[1,"page"],[0,"\r\n      "]],"start1":21276,"start2":21276,"length1":16,"length2":20}]],"length":45806,"saved":false}
{"ts":1358185408178,"patch":[[{"diffs":[[0," maxpage"],[1,":"],[0,"\r\n      "]],"start1":21280,"start2":21280,"length1":16,"length2":17}]],"length":45807,"saved":false}
{"ts":1358185409104,"patch":[[{"diffs":[[0,"maxpage:"],[1,"1"],[0,"\r\n      "]],"start1":21281,"start2":21281,"length1":16,"length2":17}]],"length":45808,"saved":false}
{"ts":1358185411327,"patch":[[{"diffs":[[0,"axpage:1"],[1,","],[0,"\r\n      "]],"start1":21282,"start2":21282,"length1":16,"length2":17}]],"length":45809,"saved":false}
{"ts":1358185440082,"patch":[[{"diffs":[[0,"p,\r\n"],[-1,"            maxpage:1,\r\n"],[0,"    "]],"start1":21265,"start2":21265,"length1":32,"length2":8}]],"length":45785,"saved":false}
{"ts":1358185615462,"patch":[[{"diffs":[[0,"     map: map,\r\n"],[1,"            max\r\n"],[0,"            filt"]],"start1":21253,"start2":21253,"length1":32,"length2":49}]],"length":45802,"saved":false}
{"ts":1358185616833,"patch":[[{"diffs":[[0,"     max"],[1,"pad"],[0,"\r\n      "]],"start1":21276,"start2":21276,"length1":16,"length2":19}]],"length":45805,"saved":false}
{"ts":1358185618396,"patch":[[{"diffs":[[0,"   maxpa"],[-1,"d"],[1,"ge"],[0,"\r\n      "]],"start1":21278,"start2":21278,"length1":17,"length2":18}]],"length":45806,"saved":false}
{"ts":1358185620486,"patch":[[{"diffs":[[0," maxpage"],[1,":"],[0,"\r\n      "]],"start1":21280,"start2":21280,"length1":16,"length2":17}]],"length":45807,"saved":false}
{"ts":1358185622392,"patch":[[{"diffs":[[0,"maxpage:"],[1," "],[0,"\r\n      "]],"start1":21281,"start2":21281,"length1":16,"length2":17}]],"length":45808,"saved":false}
{"ts":1358185626011,"patch":[[{"diffs":[[0,"axpage: "],[1,"1,"],[0,"\r\n      "]],"start1":21282,"start2":21282,"length1":16,"length2":18}]],"length":45810,"saved":false}
{"ts":1358185661578,"patch":[[{"diffs":[[0,"axpage: "],[-1,"1"],[1,"2"],[0,",\r\n     "]],"start1":21282,"start2":21282,"length1":17,"length2":17}]],"length":45810,"saved":false}
{"ts":1358185925010,"patch":[[{"diffs":[[0,"axpage: "],[-1,"2"],[1,"1"],[0,",\r\n     "]],"start1":21282,"start2":21282,"length1":17,"length2":17}]],"length":45810,"saved":false}
{"contributors":[],"silentsave":false,"ts":1358197124853,"patch":[[{"diffs":[[0,"   symbolHeight:"],[1," 40 /*"],[0," configOptions.f"]],"start1":21663,"start2":21663,"length1":32,"length2":38},{"diffs":[[0,"ckrSymbol.height"],[1," */"],[0,",\r\n            s"]],"start1":21703,"start2":21703,"length1":32,"length2":35},{"diffs":[[0,"    symbolWidth:"],[1," 40 /*"],[0," configOptions.f"]],"start1":21733,"start2":21733,"length1":32,"length2":38},{"diffs":[[0,"ickrSymbol.width"],[1," */"],[0,",\r\n            p"]],"start1":21772,"start2":21772,"length1":32,"length2":35}]],"length":45828,"saved":false}
{"ts":1358197336312,"patch":[[{"diffs":[[0,"lHeight:"],[-1," 40 /*"],[0," configO"]],"start1":21671,"start2":21671,"length1":22,"length2":16},{"diffs":[[0,"l.height"],[-1," */"],[0,",\r\n     "]],"start1":21705,"start2":21705,"length1":19,"length2":16},{"diffs":[[0,"dth:"],[-1," 40 /*"],[0," con"]],"start1":21736,"start2":21736,"length1":14,"length2":8},{"diffs":[[0,"idth"],[-1," */"],[0,",\r\n "]],"start1":21769,"start2":21769,"length1":11,"length2":8}]],"length":45810,"saved":false}
{"ts":1358197472665,"patch":[[{"diffs":[[0,"   symbolHeight:"],[1," \"40\" /*"],[0," configOptions.f"]],"start1":21663,"start2":21663,"length1":32,"length2":40},{"diffs":[[0,"ckrSymbol.height"],[1," */"],[0,",\r\n            s"]],"start1":21705,"start2":21705,"length1":32,"length2":35},{"diffs":[[0,"    symbolWidth:"],[1," \"40\" /*"],[0," configOptions.f"]],"start1":21735,"start2":21735,"length1":32,"length2":40},{"diffs":[[0,"ickrSymbol.width"],[1," */"],[0,",\r\n            p"]],"start1":21776,"start2":21776,"length1":32,"length2":35}]],"length":45832,"saved":false}
{"ts":1358197542883,"patch":[[{"diffs":[[0,"lHeight:"],[-1," \"40\" /*"],[0," configO"]],"start1":21671,"start2":21671,"length1":24,"length2":16},{"diffs":[[0,"l.height"],[-1," */"],[0,",\r\n     "]],"start1":21705,"start2":21705,"length1":19,"length2":16},{"diffs":[[0,"dth:"],[-1," \"40\" /*"],[0," con"]],"start1":21736,"start2":21736,"length1":16,"length2":8},{"diffs":[[0,"idth"],[-1," */"],[0,",\r\n "]],"start1":21769,"start2":21769,"length1":11,"length2":8}]],"length":45810,"saved":false}
